<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<link rel="stylesheet" href="/assets/css/style.css" type="text/css" />
	<title>Table Top Genie</title>
</head>

<body>

	<p>CAMERA</p>


	<video id="video" width="320" height="240" autoplay></video>
	<button id="snapButton">Snap Photo</button>
	<canvas id="canvas" width="320" height="240"></canvas>
	<img id="snap">

	<form action="/picture/create" method="POST" enctype="multipart/form-data">
		<input type="text" name="title" > </input>
		<input type="file" name="upl" id="filename"> </input>
		<input type="submit"> </input>
	</form>


	<p class="clear">
		<strong>logged_in:</strong> {{logged_in}} | {{{ body }}}

		<script>
			var take_photo_btn = document.querySelector('#snapButton');
			var image = document.querySelector('#snap');
			var video = document.getElementById('video');

			function takeSnapshot() {
				// Here we're using a trick that involves a hidden canvas element.  

				var hidden_canvas = document.querySelector('canvas'),
					context = hidden_canvas.getContext('2d');

				var width = video.videoWidth,
					height = video.videoHeight;

				if (width && height) {

					// Setup a canvas with the same dimensions as the video.
					hidden_canvas.width = width;
					hidden_canvas.height = height;

					// Make a copy of the current frame in the video on the canvas.
					context.drawImage(video, 0, 0, width, height);

					// Turn the canvas image into a dataURL that can be used as a src for our photo.
					// the returned value can be used to upload the image
					return hidden_canvas.toDataURL('image/png');
				}
			};

			//        navigator.getUserMedia(                         
			navigator.mediaDevices.getUserMedia(
				// Options
				{
					video: true
				}).then(
					// Success Callback
					function (mediaStream) {
						// Create an object URL for the video stream and
						// set it as src of our HTLM video element.
						video.srcObject = mediaStream;
						// Play the video element to show the stream to the user.
						//to hide it, change its 
						video.onloadedmetadata = function (e) {
							video.play();
						};
					}).catch(
						// Error Callback
						function (err) {
							// Most common errors are PermissionDenied and DevicesNotFound.
							console.error(err);

						}
					);

			take_photo_btn.addEventListener("click", function (e) {

				e.preventDefault();

				var snap = takeSnapshot();

				// Show image. 
				image.setAttribute('src', snap);
				image.classList.add("visible");
				image.setAttribute('width', 320)
				image.setAttribute('height', 240)
				video.style.display = "none";
				canvas.style.display = "none";

				var filename = document.querySelector('#filename');
				console.log(filename.files);
				$(filename).files[0] = snap;
				console.log("after snap");
				console.log(filename.files);


				// Enable delete and save buttons
				//delete_photo_btn.classList.remove("disabled");
				//RPB save button
				//download_photo_btn.classList.remove("disabled");

				// Set the href attribute of the download button to the snap url.
				//RPB save button turns it on 
				//download_photo_btn.href = snap;

				// Pause video playback of stream.
				video.pause();

			});


		</script>

		<script src="https://code.jquery.com/jquery-3.1.1.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8="
		 crossorigin="anonymous"></script>
		{{!-- <script src="/assets/js/ajax.js"></script> --}}
</body>

</html>